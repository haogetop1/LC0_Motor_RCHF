<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\LC0_Motor_RCHF.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\LC0_Motor_RCHF.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Wed Dec 20 15:20:23 2023
<BR><P>
<H3>Maximum Stack Usage =        352 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; SetPhaseVoltage &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[53]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[6]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">NMI_Handler</a><BR>
 <LI><a href="#[7]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">HardFault_Handler</a><BR>
 <LI><a href="#[8]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">SVC_Handler</a><BR>
 <LI><a href="#[9]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">PendSV_Handler</a><BR>
 <LI><a href="#[a]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">SysTick_Handler</a><BR>
 <LI><a href="#[10]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1e]">AES_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[27]">ATIM_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[23]">BSTIM_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[24]">COMPx_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[20]">DMA_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[29]">GPIO_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[25]">GPTIM0_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[26]">GPTIM1_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[19]">HFDET_IRQHandler</a> from mf_config.o(i.HFDET_IRQHandler) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[7]">HardFault_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1c]">I2C_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[11]">IWDT_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[14]">LCD_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[f]">LFDET_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1f]">LPTIM_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[2a]">LPUART0_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1b]">LPUART1_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[6]">NMI_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[22]">OPAx_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[9]">PendSV_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[5]">Reset_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[12]">SPI1_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[13]">SPI2_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[8]">SVC_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[c]">SVD_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[a]">SysTick_Handler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[2b]">SystemInit</a> from system_fm33lc0xx.o(i.SystemInit) referenced from startup_fm33lc0xx.o(.text)
 <LI><a href="#[1a]">U7816_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[15]">UART0_IRQHandler</a> from myuart.o(i.UART0_IRQHandler) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[16]">UART1_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[17]">UART4_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[18]">UART5_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[1d]">USB_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[28]">VREF_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[21]">WKUP_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[b]">WWDT_IRQHandler</a> from startup_fm33lc0xx.o(.text) referenced from startup_fm33lc0xx.o(RESET)
 <LI><a href="#[2d]">__main</a> from __main.o(!!!main) referenced from startup_fm33lc0xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2d]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[30]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[af]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[b0]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[31]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[b1]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[35]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[b2]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[b3]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[b4]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[b5]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[b6]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[b7]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[b8]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[b9]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[ba]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[bb]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[bc]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[bd]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[be]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[bf]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[c0]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c1]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[3a]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[c7]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[c8]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[c9]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[ca]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[cb]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[cc]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[cd]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2f]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[ce]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[32]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[34]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[cf]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[36]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; SetPhaseVoltage &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[d0]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[55]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[39]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[d1]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[3b]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[5]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>ATIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>BSTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>COMPx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>GPIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>GPTIM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>GPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>IWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>LCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>LFDET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>LPTIM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>LPUART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>LPUART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>OPAx_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>U7816_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>VREF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_fm33lc0xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_fm33lc0xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[d2]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPLLClockUpdate
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetPLLClockFreq
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[d4]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[d5]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_normalizeAngle
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d8]"></a>_d2f</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, d2f.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_normalizeAngle
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[3d]"></a>_dadd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[8c]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[40]"></a>_dsub</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[9a]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
</UL>

<P><STRONG><a name="[41]"></a>_drsb</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
</UL>

<P><STRONG><a name="[43]"></a>_ddiv</STRONG> (Thumb, 1072 bytes, Stack size 64 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drdiv
</UL>

<P><STRONG><a name="[42]"></a>_drdiv</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
</UL>

<P><STRONG><a name="[94]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[d9]"></a>_dfix</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, dfixi.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[da]"></a>_dfixu</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dfixui.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_i2d_normalise</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_i2d</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[db]"></a>_dflt</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[46]"></a>__aeabi_ui2d</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dflti.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d_normalise
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[dc]"></a>_dfltu</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflti.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[dd]"></a>_dmul</STRONG> (Thumb, 558 bytes, Stack size 56 bytes, dmul.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_normalizeAngle
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[de]"></a>_f2d</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, f2d.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>__aeabi_fdiv</STRONG> (Thumb, 0 bytes, Stack size 20 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[48]"></a>_fdiv</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frdiv
</UL>

<P><STRONG><a name="[47]"></a>_frdiv</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fdiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fdiv
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_f2uiz</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[df]"></a>_ffixu</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, ffixui.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[4b]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[4c]"></a>__fpl_dcmp_InfNaN</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, dcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[a6]"></a>_drem</STRONG> (Thumb, 368 bytes, Stack size 20 bytes, drem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _drem
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
</UL>

<P><STRONG><a name="[a7]"></a>_dsqrt</STRONG> (Thumb, 248 bytes, Stack size 20 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[4f]"></a>__fpl_fcmp_InfNaN</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, fcmpin.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frcmple
</UL>

<P><STRONG><a name="[4a]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[e0]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__fpl_cmpreturn</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cmpret.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[4e]"></a>__fpl_dcheck_NaN2</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[9c]"></a>__ARM_scalbn</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, dscalbn.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[50]"></a>__fpl_fcheck_NaN2</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, fnan2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[e2]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[e3]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[38]"></a>exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[51]"></a>__fpl_return_NaN</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, retnan.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcheck_NaN2
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN2
</UL>

<P><STRONG><a name="[3c]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[e4]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[e6]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>FL_ATIM_Init</STRONG> (Thumb, 404 bytes, Stack size 16 bytes, fm33lc0xx_fl_atim.o(i.FL_ATIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FL_ATIM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup4BusClock
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup1OperationClock
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_SetCounterAlignedMode
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_IsActiveFlag_Update
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_GenerateUpdateEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_TimerBase_Init
</UL>

<P><STRONG><a name="[5c]"></a>FL_ATIM_OC_Init</STRONG> (Thumb, 556 bytes, Stack size 24 bytes, fm33lc0xx_fl_atim.o(i.FL_ATIM_OC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FL_ATIM_OC_Init &rArr; OCConfig &rArr; FL_ATIM_OC_DisableReverseChannel
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OCConfig
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_DisableReverseChannel
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_DisableChannel
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_IsActiveFlag_Update
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_GenerateUpdateEvent
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_CC_SetChannelMode
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_Channel3_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_Channel2_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_Channel1_Init
</UL>

<P><STRONG><a name="[73]"></a>FL_DelayInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, fm33lc0xx_fl.o(i.FL_DelayInit))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_Init
</UL>

<P><STRONG><a name="[61]"></a>FL_GPIO_Init</STRONG> (Thumb, 418 bytes, Stack size 24 bytes, fm33lc0xx_fl_gpio.o(i.FL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FL_GPIO_Init &rArr; FL_GPIO_SetPinMode
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_SetPinMode
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinRemap
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinPullup
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinOpenDrain
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinInput
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_DisablePinAnalogSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_UART0_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_I2C_MASTER_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_Channel3_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_Channel2_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_Channel1_Init
</UL>

<P><STRONG><a name="[68]"></a>FL_I2C_MasterMode_Init</STRONG> (Thumb, 344 bytes, Stack size 48 bytes, fm33lc0xx_fl_i2c.o(i.FL_I2C_MasterMode_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = FL_I2C_MasterMode_Init &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCMFClockFreq
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCHFClockFreq
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup3BusClock
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB1ClockFreq
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_I2C_MASTER_Init
</UL>

<P><STRONG><a name="[72]"></a>FL_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, fm33lc0xx_fl.o(i.FL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FL_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_DelayInit
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>FL_RCC_GetAHBClockFreq</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, fm33lc0xx_fl_rcc.o(i.FL_RCC_GetAHBClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB1ClockFreq
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB2ClockFreq
</UL>

<P><STRONG><a name="[6a]"></a>FL_RCC_GetAPB1ClockFreq</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, fm33lc0xx_fl_rcc.o(i.FL_RCC_GetAPB1ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FL_RCC_GetAPB1ClockFreq &rArr; FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAHBClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[75]"></a>FL_RCC_GetAPB2ClockFreq</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, fm33lc0xx_fl_rcc.o(i.FL_RCC_GetAPB2ClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FL_RCC_GetAPB2ClockFreq &rArr; FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAHBClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
</UL>

<P><STRONG><a name="[76]"></a>FL_RCC_GetPLLClockFreq</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, fm33lc0xx_fl_rcc.o(i.FL_RCC_GetPLLClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCHFClockFreq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[6b]"></a>FL_RCC_GetRCHFClockFreq</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, fm33lc0xx_fl_rcc.o(i.FL_RCC_GetRCHFClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetPLLClockFreq
</UL>

<P><STRONG><a name="[6d]"></a>FL_RCC_GetRCMFClockFreq</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, fm33lc0xx_fl_rcc.o(i.FL_RCC_GetRCMFClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[6c]"></a>FL_RCC_GetSystemClockFreq</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, fm33lc0xx_fl_rcc.o(i.FL_RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCMFClockFreq
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCHFClockFreq
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetUSBClockFreqToSysclk
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetPLLClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAHBClockFreq
</UL>

<P><STRONG><a name="[78]"></a>FL_RCC_GetUSBClockFreqToSysclk</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, fm33lc0xx_fl_rcc.o(i.FL_RCC_GetUSBClockFreqToSysclk))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[79]"></a>FL_UART_Init</STRONG> (Thumb, 660 bytes, Stack size 24 bytes, fm33lc0xx_fl_uart.o(i.FL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FL_UART_Init &rArr; FL_RCC_GetAPB1ClockFreq &rArr; FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCMFClockFreq
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetRCHFClockFreq
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB1ClockFreq
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetAPB2ClockFreq
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup3BusClock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_EnableGroup1OperationClock
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_UART0_Init
</UL>

<P><STRONG><a name="[19]"></a>HFDET_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, mf_config.o(i.HFDET_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>MF_ATIM_Channel1_Init</STRONG> (Thumb, 98 bytes, Stack size 72 bytes, mf_config.o(i.MF_ATIM_Channel1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MF_ATIM_Channel1_Init &rArr; FL_ATIM_OC_Init &rArr; OCConfig &rArr; FL_ATIM_OC_DisableReverseChannel
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[7d]"></a>MF_ATIM_Channel2_Init</STRONG> (Thumb, 98 bytes, Stack size 72 bytes, mf_config.o(i.MF_ATIM_Channel2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MF_ATIM_Channel2_Init &rArr; FL_ATIM_OC_Init &rArr; OCConfig &rArr; FL_ATIM_OC_DisableReverseChannel
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[7e]"></a>MF_ATIM_Channel3_Init</STRONG> (Thumb, 100 bytes, Stack size 72 bytes, mf_config.o(i.MF_ATIM_Channel3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = MF_ATIM_Channel3_Init &rArr; FL_ATIM_OC_Init &rArr; OCConfig &rArr; FL_ATIM_OC_DisableReverseChannel
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[7f]"></a>MF_ATIM_TimerBase_Init</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, mf_config.o(i.MF_ATIM_TimerBase_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MF_ATIM_TimerBase_Init &rArr; FL_ATIM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[80]"></a>MF_Clock_Init</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, mf_config.o(i.MF_Clock_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = MF_Clock_Init &rArr; SystemCoreClockUpdate &rArr; SystemPLLClockUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>MF_Config_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, mf_config.o(i.MF_Config_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = MF_Config_Init &rArr; MF_I2C_MASTER_Init &rArr; FL_I2C_MasterMode_Init &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_UART0_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_I2C_MASTER_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_TimerBase_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_Channel3_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_Channel2_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_ATIM_Channel1_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[83]"></a>MF_I2C_MASTER_Init</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, mf_config.o(i.MF_I2C_MASTER_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MF_I2C_MASTER_Init &rArr; FL_I2C_MasterMode_Init &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[84]"></a>MF_UART0_Init</STRONG> (Thumb, 94 bytes, Stack size 48 bytes, mf_config.o(i.MF_UART0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MF_UART0_Init &rArr; FL_UART_Init &rArr; FL_RCC_GetAPB1ClockFreq &rArr; FL_RCC_GetAHBClockFreq &rArr; FL_RCC_GetSystemClockFreq &rArr; FL_RCC_GetPLLClockFreq &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
</UL>

<P><STRONG><a name="[86]"></a>Send_Byte</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, myuart.o(i.Send_Byte))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_SendString
</UL>

<P><STRONG><a name="[85]"></a>Serial_SendString</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, myuart.o(i.Serial_SendString))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Serial_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>SetPhaseVoltage</STRONG> (Thumb, 1132 bytes, Stack size 128 bytes, foc_kenal.o(i.SetPhaseVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = SetPhaseVoltage &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_normalizeAngle
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 348 bytes, Stack size 8 bytes, system_fm33lc0xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockUpdate &rArr; SystemPLLClockUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPLLClockUpdate
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Clock_Init
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2b]"></a>SystemInit</STRONG> (Thumb, 270 bytes, Stack size 8 bytes, system_fm33lc0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate &rArr; SystemPLLClockUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>UART0_IRQHandler</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, myuart.o(i.UART0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_fm33lc0xx.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, rred.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[77]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, foc_kenal.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetSystemClockFreq
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPLLClockUpdate
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_RCC_GetPLLClockFreq
</UL>

<P><STRONG><a name="[a0]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[99]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 838 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[9d]"></a>__kernel_cos</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[9e]"></a>__kernel_poly</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[9f]"></a>__kernel_sin</STRONG> (Thumb, 222 bytes, Stack size 64 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[a2]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[a3]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sin
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cos
</UL>

<P><STRONG><a name="[a1]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[93]"></a>_normalizeAngle</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, foc_kenal.o(i._normalizeAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _normalizeAngle &rArr; fmod &rArr; __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmod
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[8b]"></a>cos</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, cos.o(i.cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[a4]"></a>fmod</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, fmod.o(i.fmod))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = fmod &rArr; __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drem
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_normalizeAngle
</UL>

<P><STRONG><a name="[37]"></a>main</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = main &rArr; SetPhaseVoltage &rArr; sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Serial_SendString
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Config_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MF_Clock_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[89]"></a>sin</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, sin.o(i.sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[90]"></a>sqrt</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = sqrt &rArr; _dsqrt
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[92]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, dlef.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[a8]"></a>_dcmple</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, dlef.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[91]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, drlef.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[a9]"></a>_drcmple</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, drlef.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_InfNaN
</UL>

<P><STRONG><a name="[8f]"></a>__aeabi_fadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[aa]"></a>_fadd</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub1
</UL>

<P><STRONG><a name="[8e]"></a>__aeabi_fmul</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[e7]"></a>_fmul</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, fmul.o(x$fpl$fmul), UNUSED)

<P><STRONG><a name="[a5]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_cfrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_normalizeAngle
</UL>

<P><STRONG><a name="[ac]"></a>_frcmple</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, frlef.o(x$fpl$frleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fcmp_InfNaN
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_fsub</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fsub
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhaseVoltage
</UL>

<P><STRONG><a name="[ad]"></a>_fsub</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd1
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[98]"></a>SystemPLLClockUpdate</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, system_fm33lc0xx.o(i.SystemPLLClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemPLLClockUpdate &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[69]"></a>FL_RCC_EnableGroup3BusClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_fl_i2c.o(i.FL_RCC_EnableGroup3BusClock))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_I2C_MasterMode_Init
</UL>

<P><STRONG><a name="[65]"></a>FL_GPIO_DisablePinAnalogSwitch</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33lc0xx_fl_gpio.o(i.FL_GPIO_DisablePinAnalogSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[62]"></a>FL_GPIO_DisablePinInput</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33lc0xx_fl_gpio.o(i.FL_GPIO_DisablePinInput))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[64]"></a>FL_GPIO_DisablePinOpenDrain</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33lc0xx_fl_gpio.o(i.FL_GPIO_DisablePinOpenDrain))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[63]"></a>FL_GPIO_DisablePinPullup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33lc0xx_fl_gpio.o(i.FL_GPIO_DisablePinPullup))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[66]"></a>FL_GPIO_DisablePinRemap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33lc0xx_fl_gpio.o(i.FL_GPIO_DisablePinRemap))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[67]"></a>FL_GPIO_SetPinMode</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, fm33lc0xx_fl_gpio.o(i.FL_GPIO_SetPinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_GPIO_Init
</UL>

<P><STRONG><a name="[5f]"></a>FL_ATIM_CC_SetChannelMode</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, fm33lc0xx_fl_atim.o(i.FL_ATIM_CC_SetChannelMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FL_ATIM_CC_SetChannelMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_Init
</UL>

<P><STRONG><a name="[5a]"></a>FL_ATIM_GenerateUpdateEvent</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fm33lc0xx_fl_atim.o(i.FL_ATIM_GenerateUpdateEvent))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_Init
</UL>

<P><STRONG><a name="[5b]"></a>FL_ATIM_IsActiveFlag_Update</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fm33lc0xx_fl_atim.o(i.FL_ATIM_IsActiveFlag_Update))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_Init
</UL>

<P><STRONG><a name="[5d]"></a>FL_ATIM_OC_DisableChannel</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fm33lc0xx_fl_atim.o(i.FL_ATIM_OC_DisableChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FL_ATIM_OC_DisableChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OCConfig
</UL>

<P><STRONG><a name="[5e]"></a>FL_ATIM_OC_DisableReverseChannel</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, fm33lc0xx_fl_atim.o(i.FL_ATIM_OC_DisableReverseChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FL_ATIM_OC_DisableReverseChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OCConfig
</UL>

<P><STRONG><a name="[59]"></a>FL_ATIM_SetCounterAlignedMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_fl_atim.o(i.FL_ATIM_SetCounterAlignedMode))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_Init
</UL>

<P><STRONG><a name="[58]"></a>FL_RCC_EnableGroup1OperationClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_fl_atim.o(i.FL_RCC_EnableGroup1OperationClock))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_Init
</UL>

<P><STRONG><a name="[57]"></a>FL_RCC_EnableGroup4BusClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_fl_atim.o(i.FL_RCC_EnableGroup4BusClock))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_Init
</UL>

<P><STRONG><a name="[60]"></a>OCConfig</STRONG> (Thumb, 472 bytes, Stack size 24 bytes, fm33lc0xx_fl_atim.o(i.OCConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OCConfig &rArr; FL_ATIM_OC_DisableReverseChannel
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_DisableReverseChannel
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_DisableChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_ATIM_OC_Init
</UL>

<P><STRONG><a name="[7b]"></a>FL_RCC_EnableGroup1OperationClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_fl_uart.o(i.FL_RCC_EnableGroup1OperationClock))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
</UL>

<P><STRONG><a name="[7a]"></a>FL_RCC_EnableGroup3BusClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, fm33lc0xx_fl_uart.o(i.FL_RCC_EnableGroup3BusClock))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FL_UART_Init
</UL>

<P><STRONG><a name="[3f]"></a>_dadd1</STRONG> (Thumb, 290 bytes, Stack size 20 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[3e]"></a>_dsub1</STRONG> (Thumb, 470 bytes, Stack size 40 bytes, daddsub.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[ae]"></a>_fadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fsub
</UL>

<P><STRONG><a name="[ab]"></a>_fsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, faddsub.o(x$fpl$fsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[54]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
